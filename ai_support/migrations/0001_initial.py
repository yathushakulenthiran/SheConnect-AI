# Generated by Django 5.2.5 on 2025-08-09 07:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mentees', '0001_initial'),
        ('mentors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MentalHealthResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('counseling', 'Counseling Services'), ('support_groups', 'Support Groups'), ('hotlines', 'Crisis Hotlines'), ('online_resources', 'Online Resources'), ('professional_help', 'Professional Help')], max_length=50)),
                ('contact_info', models.TextField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('website', models.URLField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'mental_health_resources',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MentalHealthSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('daily_checkin', 'Daily Check-in'), ('weekly_checkin', 'Weekly Check-in'), ('stress_support', 'Stress Support'), ('motivation', 'Motivational Content'), ('resources', 'Resource Request')], max_length=20)),
                ('mood_rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], help_text='Rate your mood from 1-10')),
                ('stress_level', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], help_text='Rate your stress level from 1-10')),
                ('notes', models.TextField(blank=True)),
                ('ai_response', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mental_health_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mental_health_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'AI Assistant')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_support.mentalhealthsession')),
            ],
            options={
                'db_table': 'chat_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIMatchingScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_stage_match', models.IntegerField(default=0)),
                ('industry_match', models.IntegerField(default=0)),
                ('challenge_expertise_match', models.IntegerField(default=0)),
                ('goal_alignment_match', models.IntegerField(default=0)),
                ('overall_score', models.IntegerField(default=0)),
                ('matching_reasoning', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_matches', to='mentees.mentee')),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_matches', to='mentors.mentor')),
            ],
            options={
                'db_table': 'ai_matching_scores',
                'ordering': ['-overall_score'],
                'unique_together': {('mentee', 'mentor')},
            },
        ),
    ]
